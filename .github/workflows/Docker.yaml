name: Deploy HTML Application using docker

on:
  push:
    branches: [ "main" ]
   
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # - name: Login to Amazon ECR Private
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: "docker"
      #     IMAGE_TAG: v2
      #   run: |
      #     echo $ECR_REGISTRY
      #     docker build -t $ECR_REGISTRY/$docker:$IMAGE_TAG
      #     docker push $ECR_REGISTRY/$docker:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$docker:$IMAGE_TAG"

      - name: ECR login
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 282354058591.dkr.ecr.us-east-1.amazonaws.com

      # - name: Determine version and tag
      #   id: version
      #   run: |
      #    # You can use any logic to determine the version, e.g., from commit messages, files, etc.
      #    version=$(echo ${{ github.ref }} | cut -d '/' -f 3)
      #    echo "Version is $version"
      #    echo "::set-output name=tag::v$version"  
      
      - name: Build docker image
        run: docker build -t johnwick nginx-image

      - name: Print Pipeline Runner Number
        run: echo "Runner Number:${{ github.run_number }}"

      # - name: Tag Docker image
      #   run: |
      #    docker tag your-image-name:latest your-image-name:${{ steps.version.outputs.tag }}

      - name: Docker tag
        run: docker tag johnwick:latest 282354058591.dkr.ecr.us-east-1.amazonaws.com/johnwick:${{ github.run_number }}

      - name: Docker push
        run: docker push 282354058591.dkr.ecr.us-east-1.amazonaws.com/johnwick:${{ github.run_number }}

      - name: install kubectl
        run: |
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.28.1/2023-09-14/bin/linux/amd64/kubectl
          curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.28.1/2023-09-14/bin/linux/amd64/kubectl.sha256
          sha256sum -c kubectl.sha256
          openssl sha1 -sha256 kubectl
          chmod +x ./kubectl
          mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
          echo 'export PATH=$HOME/bin:$PATH' >> ~/.bashrc

      - name: aws eks cluster update
        run: aws eks update-kubeconfig --name Johnwick-cluster --region us-east-1

      - name: kubectl config
        run: echo $KUBECONFIG

      - name: kube config
        run: KUBECONFIG=$HOME/.kube/config

      - name: kube config
        run: cat ~/.kube/config

      - name: kubectl deployment
        run: kubectl create deployment deployment-nginx-image --image=282354058591.dkr.ecr.us-east-1.amazonaws.com/johnwick:${{ github.run_number }}

      - name: kubectl pods
        run: kubectl get pods

      - name: Kubectl set command
        run: kubectl set image deployment/deployment-nginx-image  nginx-image=282354058591.dkr.ecr.us-east-1.amazonaws.com/johnwick:${{ github.run_number }}
